#!/bin/zsh
# shortcut to this dotfiles path is $ZSH
export ZSH="$HOME/.dotfiles"

# your project folder that we can `c [tab]` to
export PROJECTS="$HOME/Projects"

# your default editor
# export EDITOR='subl'
export EDITOR='code'

# all of our zsh files
typeset -U config_files
config_files=($ZSH/*/*.zsh)

# Homebrew path depending on arch (native vs rosetta)
if [ "$(arch)" = "arm64" ]; then
 eval $(/opt/homebrew/bin/brew shellenv);
 export PATH="$PATH:/usr/local/bin:/usr/local/sbin";
else
 eval $(/usr/local/bin/brew shellenv);
 export PATH="$PATH:/opt/homebrew/bin:/opt/homebrew/sbin";
fi

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# auto "use" the version of node specified in .nvmrc file when changing directories?
# export NVM_AUTO_USE=true

# load antibody plugins
source ~/.antibody_bundles.txt

# load everything less the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

unset config_files

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
[[ -a ~/.localrc ]] && source ~/.localrc

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/donny/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/donny/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/donny/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/donny/google-cloud-sdk/completion.zsh.inc'; fi
